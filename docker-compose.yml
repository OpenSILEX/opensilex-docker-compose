version: "3.5"

services:
  haproxy:
    container_name: haproxy
    restart: always
    env_file: opensilex.env
    environment:
      - HAPROXY_PORT=${HAPROXY_PORT}
    build:
      context: .
      dockerfile: haproxy-build-step.docker

    depends_on:
      - opensilex
    volumes:
      - haproxy_conf:/usr/local/etc/haproxy
    ports:
      - "$HAPROXY_PORT:80"
  mongo:
    container_name: mongodb
    image: mongo:5.0.2
    restart: always
    volumes:
      - persist_mongo_data:/data
    command: >
      bash -c "
      (
        sleep 3 &&
        mongo --eval \"rs.initiate({'_id':'opensilex','members':[{'_id':0,'host':'mongodb:27017'}]})\" &&
        wait
      ) & docker-entrypoint.sh --replSet opensilex
      "
    ports:
      - 28887:27017

  mongoexpress:
    image: mongo-express
    container_name: mongoexpressgui
    restart: always
    ports:
      - "28889:8081"
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_URL: mongo://mongodb:27017/
    depends_on:
      - mongo
  rdf4j:
    container_name: rdf4jdb
    image: eclipse/rdf4j-workbench:3.7.6
    env_file: opensilex.env
    volumes:
      - persist_rdf4j_data:/var/rdf4j
    ports:
      - "28888:8080"

  opensilex:
    container_name: opensilexapp
    build:
      context: .
      args:
        RELEASE_TAG: 1.0.0-rc+5.2
      dockerfile: opensilex-build-step.docker
    env_file: opensilex.env
    depends_on:
      - mongo
      - rdf4j
    volumes:
      - ./config:/home/opensilex/config
      - ./logs/opensilex:/home/opensilex/logs
      - persist_opensilex:/home/opensilex/data
    command: >
      bash -c "
        ([ ! -f /home/opensilex/data/first_install ] && touch /home/opensilex/data/first_install && ./bin/opensilex.sh system install --DEBUG) 
        ./bin/opensilex.sh server start --host=localhost --port=$OPENSILEX_PORT --adminPort=4081
      "
    ports:
      - "$OPENSILEX_PORT:8081"
  start_opensilex_stack:
    image: dadarek/wait-for-dependencies
    depends_on:
      - mongo
      - rdf4j
      - opensilex
    command: mongo:27017 rdf4j:8080 opensilex:8081

  start_opensilex_stack_mongogui:
    image: dadarek/wait-for-dependencies
    depends_on:
      - mongoexpress
    command: mongoexpress:28889

  start_opensilex_stack_proxy:
    image: dadarek/wait-for-dependencies
    depends_on:
      - haproxy
      - opensilex
    command: haproxy:80 opensilex:8081
volumes:
  persist_rdf4j_data:
  persist_mongo_data:
  persist_opensilex:
  haproxy_conf:
