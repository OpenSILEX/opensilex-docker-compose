version: "3.5"

services:
  mongo:
    container_name: mongodb 
    image : mongo:5.0.9
    restart: always
    volumes:
      - persist_mongo_data:/data 
    command: >
          bash -c "
          (
            sleep 3 &&
            mongo --eval \"rs.initiate({'_id':'opensilex','members':[{'_id':0,'host':'mongo:27017'}]})\" &&
            wait
          ) & docker-entrypoint.sh --replSet opensilex
          "

  rdf4j:
    container_name: rdf4j
    image: eclipse/rdf4j-workbench:3.7.6
    env_file: opensilex.env
    volumes:
      - persist_rdf4j_data:/var/rdf4j

  opensilex:
    container_name: opensilex
    build:
      context: .
      args:
        RELEASE_TAG: 1.0.0-rc+3 
      dockerfile: opensilex-build-step.docker
    env_file: opensilex.env
    depends_on:
      - mongo
      - rdf4j
    volumes:
      - ./config:/home/opensilex/config
      - ./logs/opensilex:/home/opensilex/logs
      - persist_opensilex:/home/opensilex/data 
    command: >
          bash -c "
            ([ ! -f /home/opensilex/data/first_install ] && touch /home/opensilex/data/first_install && ./bin/opensilex.sh system install) 
            ./bin/opensilex.sh server start --host=localhost --port=8081 --adminPort=4081
          "
  nginx:
    container_name: nginx
    image: nginx:1.22
    env_file: opensilex.env
    volumes:
      - ./nginx.conf:/tmp/nginx.conf
      - ./logs/nginx/log:/var/log/nginx
    depends_on:
      - opensilex
    ports:
      - "80:80"
    command: /bin/bash -c "envsubst < /tmp/nginx.conf > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"

volumes:
  persist_rdf4j_data:
  persist_mongo_data:
  persist_opensilex:
