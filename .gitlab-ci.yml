# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

stages:
  - build
  - pages
  - integration

integration-job:
  stage: integration
  script:
    - git fetch origin pull/${CI_MERGE_REQUEST_IID}/head:pr-${CI_MERGE_REQUEST_IID}
    - git checkout pr-${CI_MERGE_REQUEST_IID} 
    - echo "Ex√©cution des tests..." 
  rules:
    - if: $GITHUB_ACCESS == "$GITHUB_ACCESS_VALUE"

include:
  - template: Jobs/Container-Scanning.gitlab-ci.yml

container_scanning:
  stage: build 
  variables:
    CS_IMAGE: $DOCKER_REGISTRY/opensilex/opensilex-docker-compose:latest


# create an docker image 
build:image: 
  image: docker:26.0.2-dind
  stage: build
  services:
    - docker:dind
  before_script:
    - export IMAGE_TAG=${IMAGE_TAG:latest} 
    - apk add --no-cache docker-compose
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script: 
    - if [ -z "$IMAGE_TAG" ]; then echo "Missing IMAGE_TAG variable latest tag will be used"; IMAGE_TAG=latest ; fi 
    - docker info
    - ls
    - docker compose --env-file opensilex.env build --build-arg UID=999 --build-arg GID=999 opensilex
    - docker tag docker.io/library/opensilex-stack-opensilex $DOCKER_REGISTRY/opensilex/opensilex-docker-compose:$IMAGE_TAG
    - docker push $DOCKER_REGISTRY/opensilex/opensilex-docker-compose:$IMAGE_TAG
  when: manual

pages:
  image: docker:26.0.2-dind 
  services:
    - docker:dind
  stage: pages 
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_DRIVER: overlay2
    # See https://github.com/docker-library/docker/pull/166
    DOCKER_TLS_CERTDIR: ""
    IMAGE: trivy-ci-test:$CI_COMMIT_SHA
    TRIVY_NO_PROGRESS: "true"
    TRIVY_CACHE_DIR: ".trivycache/"
    XDG_DATA_HOME: $CI_PROJECT_DIR/trivy/plugins
  allow_failure: true
  before_script:
   - export TRIVY_VERSION=${TRIVY_VERSION:-v0.50.2}
   - apk add --no-cache curl
   - curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin ${TRIVY_VERSION}
   - mkdir -p $CI_PROJECT_DIR/trivy/plugins 
  #  - trivy plugin run github.com/fatihtokus/scan2html
  #  - trivy plugin list
   - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - if [ -z "$IMAGE_TAG" ]; then echo "Missing IMAGE_TAG variable latest tag will be used"; IMAGE_TAG=latest ; fi 
    - mkdir $CI_PROJECT_DIR/public 
    - docker image pull  $DOCKER_REGISTRY/opensilex/opensilex-docker-compose:$IMAGE_TAG
     # Image report
    - trivy $DOCKER_REGISTRY/opensilex/opensilex-docker-compose:$IMAGE_TAG --format template --template "@contrib/gitlab-codequality.tpl" -o gl-codeclimate-image.json $IMAGE
    - trivy plugin run github.com/fatihtokus/scan2html $DOCKER_REGISTRY/opensilex/opensilex-docker-compose:$IMAGE_TAG $CI_PROJECT_DIR/public/index.html

  cache:
    paths:
      - .trivycache/ 
    # - trivy plugin run github.com/fatihtokus/scan2html $DOCKER_REGISTRY/opensilex/opensilex-docker-compose:$IMAGE_TAG $CI_PROJECT_DIR/public/index.html
  artifacts:
    paths:
      - gl-codeclimate.json
      - public 
    reports:
      codequality: gl-codeclimate.json
  when: manual