# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/pipeline/#customization
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Container Scanning customization: https://docs.gitlab.com/ee/user/application_security/container_scanning/#customizing-the-container-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence
variables:
  DOCKER_IMAGE_VERSION: docker:28.3.2-dind
stages:
- build
- test
- pages
- scan
- integration
integration-job:
  stage: integration
  script:
  - git fetch origin pull/${CI_MERGE_REQUEST_IID}/head:pr-${CI_MERGE_REQUEST_IID}
  - git checkout pr-${CI_MERGE_REQUEST_IID}
  - echo "Ex√©cution des tests..."
  rules:
  - if: $GITHUB_ACCESS == "$GITHUB_ACCESS_VALUE"
include:
- template: Jobs/Container-Scanning.gitlab-ci.yml
- template: Security/Container-Scanning.gitlab-ci.yml
- template: Security/SAST.gitlab-ci.yml
container_scanning:
  stage: test
  variables:
    CS_IMAGE: "$DOCKER_REGISTRY/$DOCKER_COMPOSE_STACK_PUBLISH:latest"
build:image:
  image: "$DOCKER_IMAGE_VERSION"
  stage: build
  services:
  - docker:dind
  before_script:
  - export IMAGE_TAG=${IMAGE_TAG:latest}
  - apk add --no-cache docker-compose
  - echo "register to $CI_REGISTRY with user $CI_REGISTRY_USER "
  - echo $CI_REGISTRY_PASSWORD | docker login $CI_REGISTRY -u $CI_REGISTRY_USER --password-stdin
  script:
  - if [ -z "$IMAGE_TAG" ]; then echo "Missing IMAGE_TAG variable latest tag will
    be used"; IMAGE_TAG=latest ; fi
  - docker info
  - ls
  - docker compose --env-file opensilex.env build --build-arg UID=999 --build-arg
    GID=999 opensilex
  - echo "Using docker tag  docker.io/library/$DOCKER_COMPOSE_STACK_NAME $DOCKER_REGISTRY/$DOCKER_COMPOSE_STACK_PUBLISH:$IMAGE_TAG
    "
  - docker tag docker.io/library/$DOCKER_COMPOSE_STACK_NAME $DOCKER_REGISTRY/$DOCKER_COMPOSE_STACK_PUBLISH:$IMAGE_TAG
  - echo "Using docker  push $DOCKER_REGISTRY/$DOCKER_COMPOSE_STACK_PUBLISH:$IMAGE_TAG
    "
  - docker push $DOCKER_REGISTRY/$DOCKER_COMPOSE_STACK_PUBLISH:$IMAGE_TAG
  when: manual
pages:
  stage: pages
  image: "$DOCKER_IMAGE_VERSION"
  services:
  - docker:dind
  variables:
    XDG_DATA_HOME: "${CI_PROJECT_DIR}/plugins"
    IMAGE: "$DOCKER_REGISTRY/$DOCKER_COMPOSE_STACK_PUBLISH:$IMAGE_TAG"
  before_script:
  - export TRIVY_VERSION=$(wget -qO - "https://api.github.com/repos/aquasecurity/trivy/releases/latest"
    | grep '"tag_name":' | sed -E 's/.*"v([^"]+)".*/\1/')
  - echo $TRIVY_VERSION
  - echo "register to $CI_REGISTRY with user $CI_REGISTRY_USER "
  - echo $CI_REGISTRY_PASSWORD | docker login $CI_REGISTRY -u $CI_REGISTRY_USER --password-stdin
  - apk update
  - apk upgrade
  - apk add bash
  - apk add curl
  - apk --no-cache add ca-certificates git
  - curl -s -L -o - https://github.com/aquasecurity/trivy/releases/download/v${TRIVY_VERSION}/trivy_${TRIVY_VERSION}_Linux-64bit.tar.gz
    | tar -xz
  allow_failure: true
  script:
  - if [ -z "$IMAGE_TAG" ]; then echo "Missing IMAGE_TAG variable latest tag will
    be used"; IMAGE_TAG=latest ; fi
  - docker image pull  $DOCKER_REGISTRY/$DOCKER_COMPOSE_STACK_PUBLISH:$IMAGE_TAG
  - mkdir -p ${CI_PROJECT_DIR}/public && mkdir -p ${CI_PROJECT_DIR}/tmp && mkdir -p
    ${CI_PROJECT_DIR}/cache
  - "./trivy plugin install github.com/fatihtokus/scan2html"
  - "./trivy plugin list"
  - echo "Creating temporary JSON report..."
  - TMPDIR=${CI_PROJECT_DIR}/tmp ./trivy --debug --cache-dir ${CI_PROJECT_DIR}/cache
    --timeout 45m --format json --output ${CI_PROJECT_DIR}/tmp/scan2html-temp-report.json
    image $DOCKER_REGISTRY/$DOCKER_COMPOSE_STACK_PUBLISH:$IMAGE_TAG
  - echo "Generating HTML report..."
  - "./trivy scan2html generate --from ${CI_PROJECT_DIR}/tmp/scan2html-temp-report.json
    --output public/index.html"
  artifacts:
    paths:
    - public
  cache:
    key: "$CI_COMMIT_REF_SLUG"
    paths:
    - "${CI_PROJECT_DIR}/cache"
sast:
  stage: test
